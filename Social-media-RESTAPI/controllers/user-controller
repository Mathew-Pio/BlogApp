const User = require('../models/User');

const bcrypt = require('bcryptjs');

exports.getAllUsers = async(req, res) => {
    let users;
    try{
        users = await User.find();
    }catch(err){
        console.log(err);
    }
    if(!users){
        return res.status(404).json({
            message: 'No user found'
        })
    }
    return res.status(200).json({users})
}

exports.signup = async(req, res) => {

    const {name, email, password} = req.body

    let existingUser;
    try{
        existingUser = await User.findOne({email})
    }catch(err){
        console.log(err)
    }
    if(existingUser){
        return res.status(400).json({
            message: 'User already exists!! Login instead'
        })
    }

    const hashedPassword = bcrypt.hashSync(password);

    const user = new User({
        name,
        email,
        password: hashedPassword,
    })

    try{
        await user.save();
    }catch(err){
        console.log(err)
    }

    return res.status(201).json({user});
}

exports.login = async(req, res, next) => {
    const { email, password } = req.body  

    let existingUser;
    try{
        existingUser = await User.findOne({email})
    }catch(err){
        console.log(err)
    }
    if(!existingUser){
        return res.status(400).json({
            message: 'No user found with this email'
        })
    }
    const isPasswordCorrect = bcrypt.compareSync(password, existingUser.password);
    if(!isPasswordCorrect){
        return res.status(400).json({
            message: 'Password inputed is incorrect'
        })
    }
    return res.status(200).json({
        message: 'User logged in successfully'
    })
}